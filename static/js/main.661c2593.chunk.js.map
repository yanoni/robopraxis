{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","robot","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAExB,OACA,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,WACzD,gCACC,6BAAKJ,IACL,4BAAIC,WCYOI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,8BAEIA,EAAOC,KAAI,SAAAC,GACT,OAAQ,cAAC,EAAD,CAENT,GAAIS,EAAMT,GACVC,KAAMQ,EAAMR,KACZC,MAAOO,EAAMP,OAHRO,EAAMT,UCKRU,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,mBACZC,SAAUH,OCKHI,EAZA,SAACC,GACd,OACE,qBAAKC,MAAO,CACVC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAHV,SAKGJ,EAAMK,YCcEC,E,kDApBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IAEDO,MAAQ,CACXC,UAAU,GAJK,E,qDAQnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,2DAEFG,KAAKX,MAAMK,a,GAjBMQ,aCkDbC,G,wDA3Cb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAcRe,eAAiB,YAAiB,IAAdC,EAAa,EAAbA,OAClB,EAAKJ,SAAS,CAAElB,YAAasB,EAAOC,SAbpC,EAAKV,MAAQ,CACXjB,OAAQ,GACRI,YAAa,IALE,E,qDASnB,WAAqB,IAAD,OAClBwB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEtB,OAAQgC,S,oBAQ3C,WACE,MAAgCX,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQI,EAAhB,EAAgBA,YAEV6B,EAAiBjC,EAAOkC,QAAO,SAAAhC,GACnC,OAAOA,EAAMR,KAAKyC,cAAcC,SAAShC,EAAY+B,kBAGvD,OAASnC,EAAOqC,OAGZ,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQiC,WAPxB,oBAAIrC,UAAU,KAAd,4B,GA7BU2B,cCIHe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.661c2593.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n\t\r\n  return (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt='robots' />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n     \r\n  return (\r\n    <div>\r\n      {\r\n        robots.map(robot => {\r\n          return (<Card \r\n            key={robot.id}\r\n            id={robot.id} \r\n            name={robot.name} \r\n            email={robot.email} />\r\n          )\r\n        }) \r\n      }        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  return (\r\n    <div className='pa2' >\r\n      <input \r\n        className='pa3 ba b--green bg-lightest-blue' \r\n        type='search' \r\n        placeholder='Search Robots...'\r\n        onChange={searchChange}        \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ \r\n      overflowY: 'scroll', \r\n      border: '5px solid black',\r\n      height: '800px'\r\n    }} >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hasError: false\r\n    };    \r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oops... That is not good.</h1>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      robots: [],\r\n      searchField: '' \r\n    }    \r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }));    \r\n  }\r\n\r\n  onSearchChange = ({ target }) => {\r\n    this.setState({ searchField: target.value });\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n    \r\n    return (!robots.length) \r\n      ? <h1 className='tc'>Loading...</h1>\r\n      : (\r\n        <div className='tc' >\r\n          <h1 className='f1'>RoboPraxis</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll >\r\n            <ErrorBoundary >\r\n              <CardList robots={filteredRobots} /> \r\n            </ErrorBoundary>            \r\n          </Scroll>\r\n        </div>\r\n      )        \r\n  }  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}